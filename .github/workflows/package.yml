name: Package Releases

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run tests
        run: cargo test --release --target ${{ matrix.target }}

      - name: Install zip (Windows)
        if: matrix.os == 'windows-latest'
        run: choco install zip -y

      - name: Package binary
        shell: bash
        run: |
          BIN_NAME="skeletor"
          OS_CLEAN=$(echo "${{ matrix.os }}" | sed 's/-latest//')  # Standardize OS name
          TARGET="${{ matrix.target }}"

          if [[ "$OS_CLEAN" == "windows" ]]; then
              BIN_NAME="${BIN_NAME}.exe"
              ARTIFACT_NAME="${BIN_NAME}-${OS_CLEAN}-${TARGET}.zip"
              zip "${ARTIFACT_NAME}" -j "target/${TARGET}/release/${BIN_NAME}"
          else
              ARTIFACT_NAME="${BIN_NAME}-${OS_CLEAN}-${TARGET}.tar.gz"
              tar -czf "${ARTIFACT_NAME}" -C "target/${TARGET}/release" "${BIN_NAME}"
          fi

          echo "Created ${ARTIFACT_NAME}"
          echo "ARTIFACT_NAME=${ARTIFACT_NAME}" >> $GITHUB_ENV

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.ARTIFACT_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
